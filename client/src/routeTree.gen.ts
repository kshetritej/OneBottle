/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as NotificationsImport } from './routes/notifications'
import { Route as MeImport } from './routes/me'
import { Route as CheckoutImport } from './routes/checkout'
import { Route as CartImport } from './routes/cart'
import { Route as AuthImport } from './routes/auth'
import { Route as OrderSummaryIndexImport } from './routes/order-summary/index'
import { Route as ProductExploreImport } from './routes/product/explore'
import { Route as ProductProductIdImport } from './routes/product/$productId'
import { Route as OrderSummaryOrderIdImport } from './routes/order-summary/$orderId'
import { Route as AdminReviewsImport } from './routes/admin/reviews'
import { Route as AdminDashboardImport } from './routes/admin/dashboard'
import { Route as AdminAuthImport } from './routes/admin/auth'
import { Route as AdminUsersIndexImport } from './routes/admin/users/index'
import { Route as AdminProductsIndexImport } from './routes/admin/products/index'
import { Route as AdminOrdersIndexImport } from './routes/admin/orders/index'
import { Route as AdminCategoriesIndexImport } from './routes/admin/categories/index'
import { Route as ProductCategoryCategoryIdImport } from './routes/product/category/$categoryId'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const NotificationsRoute = NotificationsImport.update({
  path: '/notifications',
  getParentRoute: () => rootRoute,
} as any)

const MeRoute = MeImport.update({
  path: '/me',
  getParentRoute: () => rootRoute,
} as any)

const CheckoutRoute = CheckoutImport.update({
  path: '/checkout',
  getParentRoute: () => rootRoute,
} as any)

const CartRoute = CartImport.update({
  path: '/cart',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const OrderSummaryIndexRoute = OrderSummaryIndexImport.update({
  path: '/order-summary/',
  getParentRoute: () => rootRoute,
} as any)

const ProductExploreRoute = ProductExploreImport.update({
  path: '/product/explore',
  getParentRoute: () => rootRoute,
} as any)

const ProductProductIdRoute = ProductProductIdImport.update({
  path: '/product/$productId',
  getParentRoute: () => rootRoute,
} as any)

const OrderSummaryOrderIdRoute = OrderSummaryOrderIdImport.update({
  path: '/order-summary/$orderId',
  getParentRoute: () => rootRoute,
} as any)

const AdminReviewsRoute = AdminReviewsImport.update({
  path: '/admin/reviews',
  getParentRoute: () => rootRoute,
} as any)

const AdminDashboardRoute = AdminDashboardImport.update({
  path: '/admin/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AdminAuthRoute = AdminAuthImport.update({
  path: '/admin/auth',
  getParentRoute: () => rootRoute,
} as any)

const AdminUsersIndexRoute = AdminUsersIndexImport.update({
  path: '/admin/users/',
  getParentRoute: () => rootRoute,
} as any)

const AdminProductsIndexRoute = AdminProductsIndexImport.update({
  path: '/admin/products/',
  getParentRoute: () => rootRoute,
} as any)

const AdminOrdersIndexRoute = AdminOrdersIndexImport.update({
  path: '/admin/orders/',
  getParentRoute: () => rootRoute,
} as any)

const AdminCategoriesIndexRoute = AdminCategoriesIndexImport.update({
  path: '/admin/categories/',
  getParentRoute: () => rootRoute,
} as any)

const ProductCategoryCategoryIdRoute = ProductCategoryCategoryIdImport.update({
  path: '/product/category/$categoryId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/cart': {
      id: '/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartImport
      parentRoute: typeof rootRoute
    }
    '/checkout': {
      id: '/checkout'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof CheckoutImport
      parentRoute: typeof rootRoute
    }
    '/me': {
      id: '/me'
      path: '/me'
      fullPath: '/me'
      preLoaderRoute: typeof MeImport
      parentRoute: typeof rootRoute
    }
    '/notifications': {
      id: '/notifications'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof NotificationsImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/admin/auth': {
      id: '/admin/auth'
      path: '/admin/auth'
      fullPath: '/admin/auth'
      preLoaderRoute: typeof AdminAuthImport
      parentRoute: typeof rootRoute
    }
    '/admin/dashboard': {
      id: '/admin/dashboard'
      path: '/admin/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardImport
      parentRoute: typeof rootRoute
    }
    '/admin/reviews': {
      id: '/admin/reviews'
      path: '/admin/reviews'
      fullPath: '/admin/reviews'
      preLoaderRoute: typeof AdminReviewsImport
      parentRoute: typeof rootRoute
    }
    '/order-summary/$orderId': {
      id: '/order-summary/$orderId'
      path: '/order-summary/$orderId'
      fullPath: '/order-summary/$orderId'
      preLoaderRoute: typeof OrderSummaryOrderIdImport
      parentRoute: typeof rootRoute
    }
    '/product/$productId': {
      id: '/product/$productId'
      path: '/product/$productId'
      fullPath: '/product/$productId'
      preLoaderRoute: typeof ProductProductIdImport
      parentRoute: typeof rootRoute
    }
    '/product/explore': {
      id: '/product/explore'
      path: '/product/explore'
      fullPath: '/product/explore'
      preLoaderRoute: typeof ProductExploreImport
      parentRoute: typeof rootRoute
    }
    '/order-summary/': {
      id: '/order-summary/'
      path: '/order-summary'
      fullPath: '/order-summary'
      preLoaderRoute: typeof OrderSummaryIndexImport
      parentRoute: typeof rootRoute
    }
    '/product/category/$categoryId': {
      id: '/product/category/$categoryId'
      path: '/product/category/$categoryId'
      fullPath: '/product/category/$categoryId'
      preLoaderRoute: typeof ProductCategoryCategoryIdImport
      parentRoute: typeof rootRoute
    }
    '/admin/categories/': {
      id: '/admin/categories/'
      path: '/admin/categories'
      fullPath: '/admin/categories'
      preLoaderRoute: typeof AdminCategoriesIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/orders/': {
      id: '/admin/orders/'
      path: '/admin/orders'
      fullPath: '/admin/orders'
      preLoaderRoute: typeof AdminOrdersIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/products/': {
      id: '/admin/products/'
      path: '/admin/products'
      fullPath: '/admin/products'
      preLoaderRoute: typeof AdminProductsIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/users/': {
      id: '/admin/users/'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/auth': typeof AuthRoute
  '/cart': typeof CartRoute
  '/checkout': typeof CheckoutRoute
  '/me': typeof MeRoute
  '/notifications': typeof NotificationsRoute
  '/about': typeof AboutLazyRoute
  '/admin/auth': typeof AdminAuthRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/reviews': typeof AdminReviewsRoute
  '/order-summary/$orderId': typeof OrderSummaryOrderIdRoute
  '/product/$productId': typeof ProductProductIdRoute
  '/product/explore': typeof ProductExploreRoute
  '/order-summary': typeof OrderSummaryIndexRoute
  '/product/category/$categoryId': typeof ProductCategoryCategoryIdRoute
  '/admin/categories': typeof AdminCategoriesIndexRoute
  '/admin/orders': typeof AdminOrdersIndexRoute
  '/admin/products': typeof AdminProductsIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/auth': typeof AuthRoute
  '/cart': typeof CartRoute
  '/checkout': typeof CheckoutRoute
  '/me': typeof MeRoute
  '/notifications': typeof NotificationsRoute
  '/about': typeof AboutLazyRoute
  '/admin/auth': typeof AdminAuthRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/reviews': typeof AdminReviewsRoute
  '/order-summary/$orderId': typeof OrderSummaryOrderIdRoute
  '/product/$productId': typeof ProductProductIdRoute
  '/product/explore': typeof ProductExploreRoute
  '/order-summary': typeof OrderSummaryIndexRoute
  '/product/category/$categoryId': typeof ProductCategoryCategoryIdRoute
  '/admin/categories': typeof AdminCategoriesIndexRoute
  '/admin/orders': typeof AdminOrdersIndexRoute
  '/admin/products': typeof AdminProductsIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/auth': typeof AuthRoute
  '/cart': typeof CartRoute
  '/checkout': typeof CheckoutRoute
  '/me': typeof MeRoute
  '/notifications': typeof NotificationsRoute
  '/about': typeof AboutLazyRoute
  '/admin/auth': typeof AdminAuthRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/admin/reviews': typeof AdminReviewsRoute
  '/order-summary/$orderId': typeof OrderSummaryOrderIdRoute
  '/product/$productId': typeof ProductProductIdRoute
  '/product/explore': typeof ProductExploreRoute
  '/order-summary/': typeof OrderSummaryIndexRoute
  '/product/category/$categoryId': typeof ProductCategoryCategoryIdRoute
  '/admin/categories/': typeof AdminCategoriesIndexRoute
  '/admin/orders/': typeof AdminOrdersIndexRoute
  '/admin/products/': typeof AdminProductsIndexRoute
  '/admin/users/': typeof AdminUsersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/cart'
    | '/checkout'
    | '/me'
    | '/notifications'
    | '/about'
    | '/admin/auth'
    | '/admin/dashboard'
    | '/admin/reviews'
    | '/order-summary/$orderId'
    | '/product/$productId'
    | '/product/explore'
    | '/order-summary'
    | '/product/category/$categoryId'
    | '/admin/categories'
    | '/admin/orders'
    | '/admin/products'
    | '/admin/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/cart'
    | '/checkout'
    | '/me'
    | '/notifications'
    | '/about'
    | '/admin/auth'
    | '/admin/dashboard'
    | '/admin/reviews'
    | '/order-summary/$orderId'
    | '/product/$productId'
    | '/product/explore'
    | '/order-summary'
    | '/product/category/$categoryId'
    | '/admin/categories'
    | '/admin/orders'
    | '/admin/products'
    | '/admin/users'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/cart'
    | '/checkout'
    | '/me'
    | '/notifications'
    | '/about'
    | '/admin/auth'
    | '/admin/dashboard'
    | '/admin/reviews'
    | '/order-summary/$orderId'
    | '/product/$productId'
    | '/product/explore'
    | '/order-summary/'
    | '/product/category/$categoryId'
    | '/admin/categories/'
    | '/admin/orders/'
    | '/admin/products/'
    | '/admin/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AuthRoute: typeof AuthRoute
  CartRoute: typeof CartRoute
  CheckoutRoute: typeof CheckoutRoute
  MeRoute: typeof MeRoute
  NotificationsRoute: typeof NotificationsRoute
  AboutLazyRoute: typeof AboutLazyRoute
  AdminAuthRoute: typeof AdminAuthRoute
  AdminDashboardRoute: typeof AdminDashboardRoute
  AdminReviewsRoute: typeof AdminReviewsRoute
  OrderSummaryOrderIdRoute: typeof OrderSummaryOrderIdRoute
  ProductProductIdRoute: typeof ProductProductIdRoute
  ProductExploreRoute: typeof ProductExploreRoute
  OrderSummaryIndexRoute: typeof OrderSummaryIndexRoute
  ProductCategoryCategoryIdRoute: typeof ProductCategoryCategoryIdRoute
  AdminCategoriesIndexRoute: typeof AdminCategoriesIndexRoute
  AdminOrdersIndexRoute: typeof AdminOrdersIndexRoute
  AdminProductsIndexRoute: typeof AdminProductsIndexRoute
  AdminUsersIndexRoute: typeof AdminUsersIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AuthRoute: AuthRoute,
  CartRoute: CartRoute,
  CheckoutRoute: CheckoutRoute,
  MeRoute: MeRoute,
  NotificationsRoute: NotificationsRoute,
  AboutLazyRoute: AboutLazyRoute,
  AdminAuthRoute: AdminAuthRoute,
  AdminDashboardRoute: AdminDashboardRoute,
  AdminReviewsRoute: AdminReviewsRoute,
  OrderSummaryOrderIdRoute: OrderSummaryOrderIdRoute,
  ProductProductIdRoute: ProductProductIdRoute,
  ProductExploreRoute: ProductExploreRoute,
  OrderSummaryIndexRoute: OrderSummaryIndexRoute,
  ProductCategoryCategoryIdRoute: ProductCategoryCategoryIdRoute,
  AdminCategoriesIndexRoute: AdminCategoriesIndexRoute,
  AdminOrdersIndexRoute: AdminOrdersIndexRoute,
  AdminProductsIndexRoute: AdminProductsIndexRoute,
  AdminUsersIndexRoute: AdminUsersIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth",
        "/cart",
        "/checkout",
        "/me",
        "/notifications",
        "/about",
        "/admin/auth",
        "/admin/dashboard",
        "/admin/reviews",
        "/order-summary/$orderId",
        "/product/$productId",
        "/product/explore",
        "/order-summary/",
        "/product/category/$categoryId",
        "/admin/categories/",
        "/admin/orders/",
        "/admin/products/",
        "/admin/users/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/auth": {
      "filePath": "auth.tsx"
    },
    "/cart": {
      "filePath": "cart.tsx"
    },
    "/checkout": {
      "filePath": "checkout.tsx"
    },
    "/me": {
      "filePath": "me.tsx"
    },
    "/notifications": {
      "filePath": "notifications.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/admin/auth": {
      "filePath": "admin/auth.tsx"
    },
    "/admin/dashboard": {
      "filePath": "admin/dashboard.tsx"
    },
    "/admin/reviews": {
      "filePath": "admin/reviews.tsx"
    },
    "/order-summary/$orderId": {
      "filePath": "order-summary/$orderId.tsx"
    },
    "/product/$productId": {
      "filePath": "product/$productId.tsx"
    },
    "/product/explore": {
      "filePath": "product/explore.tsx"
    },
    "/order-summary/": {
      "filePath": "order-summary/index.tsx"
    },
    "/product/category/$categoryId": {
      "filePath": "product/category/$categoryId.tsx"
    },
    "/admin/categories/": {
      "filePath": "admin/categories/index.tsx"
    },
    "/admin/orders/": {
      "filePath": "admin/orders/index.tsx"
    },
    "/admin/products/": {
      "filePath": "admin/products/index.tsx"
    },
    "/admin/users/": {
      "filePath": "admin/users/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
